工作中遇到的一些坑。先记在这里，如果以后再踩，我会打死自己。一拳又一拳

hibernate：
    类中类延迟加载。。A里有B,B里有C,C里有A。。
    调用logger打印或者自己写的toString的时候，它会无限的去get get get
    然后报StackOverFlow
    有许多字段可能是不必要的,而且有时候需要的是一个id，结果要先取的这个对象，然后取id
mybatis：
    if test='number != null AND number != '''
    如果number为数字类型且为0的时候  这个if就不会进来

    尽量使用对象类型

    invalid bound statement 这个经常出的错误。。
    一般经常是方法名没对上 参数没对上 xml里的namespace没写对 或者没读取到xml  mapperLocation等等

    返回的List<Map>或是Map类型的
    若Map的所有字段值都是NULL，那么这个Map是NULL

    SELECT如若用了resultMap就不用SELECT column AS property这样了，
    不然字段与类属性对不上，导致所有属性值全为NULL，
    使用SELECT AS的话直接用resultType就行了

编码：
    任何时候请注意编码
    文件编码字符串编码等。。。windows默认编码。。。linux默认编码。。
    今天遇到个计算sign。。单元测试和程序运行算出来的值不一的情况。。
    搞了半天。。后来在md5计算那里 str.getBytes() 换成 str.getBytes("UTF-8")就可以了。。
日期：
    SimpleDateFormat
    这个东西据说是线程不安全的。。然而我们生产环境的好像不是这个问题
    因为每次执行那个public static方法的时候，里面都会new一个sdf
    但是就是new SimpleDateFormat()这一行会出问题。。
    这个方法里还有个Calendar.getInstance()也会出问题。。
    所以以后尽量不用这两个了。。。除非找到问题，能熟练运用的时候
    并发的话千万不要用这个。。。。。。。。。。。。。。。。。。。千万
    前人前人前人代码里有个sdf.parse(sdf.format(startTime)); 它的注释是舍去毫秒数。。这代码真菜！！！
    一个2019年6月多的时间返回了一个1111年2月的时间。。。。服了。。。。

调试：
    如果打了断点，使劲运行也不会到断点处，不用重新build，不用clean，不用清缓存，不用更换tomcat，不用考虑更换IDE,不用重启
    一般是打错位置了，找到正确的代码再打上就没问题了
    如果改了数据库数据，使用运行也不会跟着你的if走，不用...这一系列操作
    一般是改错数据库了，找到你用的数据库再操作就没问题了
环境：
    请保持开发，测试，生产环境一致
    这次发生了一起生产和测试环境一样，都是java8，生产却是java7，引起的升级失败的事件。。。简直糟糕。。。
    整个人一天的心情都不好了
数据：
    增删改查一定要区分，加事务，敏感数据修改一定要做保护
    数据量大的话一定要严格限制用户查询的数据量。。限制条数，查询时间等。。报表等操作不要在高峰期做
注释
    是必需的
日志
    也是必需的，比注释更重要
    若是重要的类里有多个return的话，最好return之前输出下日志，如果输出的话语差不多的话，最好加个标识，使得开发人员知道这对应的是哪一行代码
    不然若是不同行的语句有相同的日志语句，你可能不知道程序当时运行进入了哪个分支

Windows & Linux
    背景：Windows开发，Linux测试，Linux生产
    问题：开发与测试能导出Excel报表，生产的报一个awt相关的错误
    解决办法：在tomcat的catalina.sh里 的JAVA_OPTS里加上-Djava.awt.headless=true
              或者在每一行-Djava.io.tmpdir="$CATALINA_TMPDIR" \后面加上-Djava.awt.headless=true \

接入第三方API
    一定要有明确的文档，测试生产环境以及对应的数据
    一般就发数据过去，再接收数据
    有什么签名啊，加密啊什么的
    注意好参数的顺序啊大小写啊等等，一般就没问题了
    建行是真的坑坑坑

前后端交互
    前端访问后台404
    看看后台访问到了没有
    有的话一般是后台异常然后响应中断
    Mybatis那个boundStatement异常竟然被系统自己吃了
    没有打印异常堆栈信息也没有log
    最后debug找到了。。
    改完发现还是404，再看，原来是resultType不对。。
    真滴坑，瓜皮

    后台返回long型数据，在前端，long长度大于17位时会出现精度丢失

Spring Boot
    图标是各种坑，resource目录里放了，static目录里也放了
    就是不管用
    然而，重启浏览器就好了

Maven插件
    Maven SpringBoot 打包运行找不到主清单
    嘿嘿嘿，以我多年Java经验马上就知道是 spring boot maven plugin的问题
    果然，打开pom一看，没加这个插件，加上，mvn clean package -> java -jar XXX.jar
    然而，还是找不到主清单
    经过一系列的操作，改version，改configuration，改goals，加其它插件，等等等等，都不行
    忽然想到了问题根源，继承了一个其它的parent，果然，改成spring-boot-starter-parent，mvn clean package -> java -jar XXX.jar Success!
    进到那个parent pom一看，spring-boot-maven-plugin插件配置的属性<configuration>里还有个属性<skip>true</skip>，俺服了
    这个代码要这样搞，没办法，只能在该项目插件配置里也加个<skip>false</skip>，mvn clean package -> java -jar XXX.jar Success!
    唉，搞了小半天，俺记住你了