package com.clei.Y2019.M08.D05;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.clei.utils.Base64Util;
import com.clei.utils.EncryptUtil;
import com.clei.utils.PrintUtil;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

import javax.crypto.Cipher;
import javax.crypto.Mac;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;
import java.util.TreeMap;

public class EleInvoiceTest {
    private final static String API_URL = "http://101.124.15.54:8080/invoice/v1/";
    private final static String SIGN_URL = "101.124.15.54/invoice/v1/";
    private final static String INTERFACE_GENERATE_INVOICE = "generateInvoice";
    private final static String INTERFACE_PUSH_INVOICE = "pushInvoice";
    private final static String POST = "POST";
    private final static String CHARSET_UTF8 = "UTF-8";
    private final static String ALGORITHM_SIGN = "HmacSHA1";
    private final static String DES_KEY = "12345678";
    private final static float SL = 0.09f;

    public static void main(String[] args) throws Exception {
        String content = "";
        String notifyStr = notify(content,"","1","1");
        JSONObject json = JSONObject.parseObject(notifyStr);
        json.forEach((k, v) -> PrintUtil.dateLine(k + " " + v.toString().length()));
        Base64Util.base64ToFile(json.getString("PDF_FILE"), "D:\\files\\9.pdf");
        /*Map<String,Object> paramMap = new HashMap<>();
        paramMap.put("tax_number","150000090004103547");
        paramMap.put("name","150000090004103547");
        paramMap.put("dsptbm","111NMPQI");
        paramMap.put("drawer","开票员1号");
        paramMap.put("secret_id","485abd5ade61437e90240b70b8943267");
        paramMap.put("secret_key","43aca2dccb0544b4922dff6ccd4e1be1");
        paramMap.put("address","某路某号1111");
        paramMap.put("phone","184XXXXXXXX");
        paramMap.put("bank","中国银行");
        paramMap.put("account","01234567890");
        Map<String,Object> invoicingRecord = new HashMap<>();
        invoicingRecord.put("invoice_price","100.00");
        invoicingRecord.put("invoice_title","张三");
        invoicingRecord.put("invoice_title_type","2");
        invoicingRecord.put("e_mail","yueyaye@163.com");
        invoicingRecord.put("remarks","开票测试");
        newInvoice(paramMap,invoicingRecord,100.0f,"哈哈哈哈");*/
        // pushInvoice("111NMPQI3dqDH47C3aKf","201908121108231AXiBP36",paramMap);
    }

    private static void newInvoice(Map<String, Object> paramMap, Map<String, Object> invoicingRecord, float jshj, String userName) throws Exception {
        String fpqqlsh = paramMap.get("dsptbm").toString() + getRandom(12);
        if (null == userName || "".equals(userName)) {
            userName = paramMap.get("drawer").toString();
        }
        String content = getContent(fpqqlsh, userName, jshj, paramMap, invoicingRecord);
        TreeMap<String, String> param = getParam(content,paramMap.get("secret_id").toString());
        String sign = generateSign(param,paramMap.get("secret_key").toString(),POST,INTERFACE_GENERATE_INVOICE);
        param.put("Signature",sign);
        doPost(API_URL + INTERFACE_GENERATE_INVOICE,param);
    }

    /**
     *
     * @param fpqqlsh 111NMPQI3dqDH47C3aKf
     * @param orderId 201908121108231AXiBP36
     */
    private static void pushInvoice(String fpqqlsh,String orderId,Map<String, Object> paramMap) throws Exception {
        JSONObject json = new JSONObject();
        json.put("FPQQLSH",fpqqlsh);
        json.put("DDH",orderId);
        String content = json.toJSONString();
        PrintUtil.dateLine("未加密的推送发票报文： " + content);
        content = Base64encode(content.getBytes(CHARSET_UTF8));
        PrintUtil.dateLine("加密后的推送发票报文： " + content);
        TreeMap<String, String> param = getParam(content,paramMap.get("secret_id").toString());
        String sign = generateSign(param,paramMap.get("secret_key").toString(),POST,INTERFACE_PUSH_INVOICE);
        param.put("Signature",sign);
        doPost(API_URL + INTERFACE_PUSH_INVOICE,param);
    }

    private static JSONObject getInvoiceHeader(String fpqqlsh, String drawer, float hjje, Map<String, Object> paramMap, Map<String, Object> invoicingRecord) {
        JSONObject invoiceHeader = new JSONObject();
        invoiceHeader.put("FPQQLSH", fpqqlsh);
        invoiceHeader.put("DSPTBM", paramMap.get("dsptbm").toString());
        String taxNumber = paramMap.get("tax_number").toString();
        String name = paramMap.get("name").toString();
        invoiceHeader.put("NSRSBH", taxNumber);
        invoiceHeader.put("NSRMC", name);
        invoiceHeader.put("DKBZ", "0");
        invoiceHeader.put("KPXM", "车辆停放服务");
        invoiceHeader.put("BMB_BBH", "33.0");
        invoiceHeader.put("XHF_NSRSBH", taxNumber);
        invoiceHeader.put("XHFMC", paramMap.get("name").toString());
        invoiceHeader.put("XHF_DZ", paramMap.get("address").toString());
        invoiceHeader.put("XHF_DH", paramMap.get("phone").toString());
        invoiceHeader.put("XHF_YHZH", paramMap.get("bank").toString() + paramMap.get("account").toString());
        invoiceHeader.put("GHFMC",invoicingRecord.get("invoice_title").toString());
        Object buyerTaxNumberObj = invoicingRecord.get("tax_number");
        String buyerTaxNumber = null == buyerTaxNumberObj ? "" : buyerTaxNumberObj.toString();
        invoiceHeader.put("GHF_NSRSBH", buyerTaxNumber);
        String type = invoicingRecord.get("invoice_title_type").toString();
        // 企业
        if ("1".equals(type)) {
            invoiceHeader.put("GHFQYLX", "01");
        } else {
            // 个人
            invoiceHeader.put("GHFQYLX", "03");
        }
        // 必填？
        invoiceHeader.put("GHF_SJ", "184XXXXXXXX");
        invoiceHeader.put("GHF_EMAIL", invoicingRecord.get("e_mail").toString());
        invoiceHeader.put("KPY", drawer);
        invoiceHeader.put("KPLX", "1");
        invoiceHeader.put("FPZL_DM", "51");
        invoiceHeader.put("TSCHBZ", "0");
        invoiceHeader.put("CZDM", "10");
        invoiceHeader.put("QD_BZ", "0");
        // 价税合计 税额和不含税金额计算
        float hjse = getScaleFloat((hjje * SL) / (1 + SL));
        invoiceHeader.put("KPHJJE", "" + hjje);
        invoiceHeader.put("HJBHSJE", "" + getScaleFloat(hjje - hjse));
        invoiceHeader.put("HJSE", "" + hjse);
        Object remarks = invoicingRecord.get("remarks");
        if (null != remarks && !"".equals(remarks)) {
            invoiceHeader.put("BZ", remarks.toString());
        }
        return invoiceHeader;
    }

    private static String getContent(String fpqqlsh, String drawer, float xmje, Map<String, Object> paramMap, Map<String, Object> invoicingRecord) throws Exception {
        JSONObject jsonContent = new JSONObject();
        jsonContent.put("FPKJXX_FPTXX", getInvoiceHeader(fpqqlsh, drawer, xmje, paramMap, invoicingRecord));
        jsonContent.put("FPKJXX_XMXXS", getInvoiceItems(xmje));
        jsonContent.put("FPKJXX_DDXX", getOrder());
        String content = jsonContent.toJSONString();
        PrintUtil.dateLine("未加密的请求发票报文： " + content);
        content = Base64encode(content.getBytes(CHARSET_UTF8));
        PrintUtil.dateLine("加密后的请求发票报文： " + content);
        return content;
    }

    private static JSONArray getInvoiceItems(float xmje) {
        JSONObject invoiceItem = new JSONObject();
        invoiceItem.put("XMMC", "车辆停放服务");
        invoiceItem.put("XMSL", "1");
        invoiceItem.put("HSBZ", "1");
        invoiceItem.put("FPHXZ", "0");
        invoiceItem.put("XMDJ", "" + xmje);
        invoiceItem.put("SPBM", "3040502020200000000");
        invoiceItem.put("YHZCBS", "0");
        invoiceItem.put("XMJE", "" + xmje);
        invoiceItem.put("SL", "" + SL);
        JSONArray invoiceItems = new JSONArray();
        invoiceItems.add(invoiceItem);
        return invoiceItems;
    }

    private static JSONObject getOrder() {
        JSONObject order = new JSONObject();
        order.put("DDH", getCurrentTime("yyyyMMddHHmmss") + getRandom(8));
        return order;
    }

    private static String getRandom(int num) {
        StringBuffer id = new StringBuffer();
        Random random = new Random();
        for (int i = 0; i < num; i++) {
            char s = 0;
            int j = random.nextInt(3) % 4;
            switch (j) {
                case 0:
                    //随机生成数字
                    s = (char) (random.nextInt(57) % (57 - 48 + 1) + 48);
                    break;
                case 1:
                    //随机生成大写字母
                    s = (char) (random.nextInt(90) % (90 - 65 + 1) + 65);
                    break;
                case 2:
                    //随机生成小写字母
                    s = (char) (random.nextInt(122) % (122 - 97 + 1) + 97);
                    break;
            }
            id.append(s);
        }
        return id.toString();
    }

    private static float getScaleFloat(float f) {
        return new BigDecimal(f).setScale(2, BigDecimal.ROUND_HALF_UP).floatValue();
    }

    private static String getCurrentTime(String pattern) {
        return new SimpleDateFormat(pattern).format(new Date());
    }

    private static byte[] encrypt3DES(String str) throws Exception {
        String algorithm = "DESede";
        // key
        SecretKey secretKey = new SecretKeySpec(DES_KEY.getBytes(CHARSET_UTF8), algorithm);
        // 加密
        Cipher cipher = Cipher.getInstance(algorithm);
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);

        return cipher.doFinal(str.getBytes(CHARSET_UTF8));
    }

    private static String decrypt3DES(byte[] bytes) throws Exception {
        // key
        String algorithm = "DESede";
        SecretKey secretKey = new SecretKeySpec(DES_KEY.getBytes(CHARSET_UTF8), algorithm);
        // 解密
        Cipher cipher = Cipher.getInstance(algorithm);
        cipher.init(Cipher.DECRYPT_MODE, secretKey);

        byte[] result = cipher.doFinal(bytes);
        return new String(result, CHARSET_UTF8);
    }

    private static String Base64encode(byte[] bytes) throws UnsupportedEncodingException {
        return new BASE64Encoder().encode(bytes);
    }

    private static byte[] Base64decode(String str) throws IOException {
        return new BASE64Decoder().decodeBuffer(str);
    }

    private static TreeMap<String, String> getParam(String content,String secretId) {
        TreeMap<String, String> map = new TreeMap<>();
        map.put("content", content);
        map.put("zipCode", "0");
        map.put("encryptCode", "0");
        int rand = new Random().nextInt(99999999);
        map.put("Nonce", "" + rand);
        map.put("SecretId", secretId);
        map.put("Timestamp", "" + System.currentTimeMillis() / 1000);
        return map;
    }

    private static String generateSign(TreeMap<String, String> map,String key, String method,String interfaceCode) throws Exception {
        // 组装需签名的字符串
        Iterator<Map.Entry<String, String>> it = map.entrySet().iterator();
        Map.Entry<String, String> entry;
        String paramStr = "";
        while (it.hasNext()) {
            entry = it.next();
            paramStr += entry.getKey() + '=' + entry.getValue() + '&';
        }
        if (!"".equals(paramStr)) {
            paramStr = paramStr.substring(0, paramStr.length() - 1);
        }
        String signStr = method + SIGN_URL + interfaceCode + '?' + paramStr;
        PrintUtil.dateLine("签名字符串： " + signStr);
        return generateSign(signStr,key);
    }

    private static String generateSign(String srcStr,String key) throws Exception {
        SecretKeySpec keySpec = new SecretKeySpec(key.getBytes(CHARSET_UTF8), ALGORITHM_SIGN);
        Mac mac = Mac.getInstance(ALGORITHM_SIGN);
        mac.init(keySpec);
        byte[] bytes = mac.doFinal(srcStr.getBytes(CHARSET_UTF8));
        return Base64encode(bytes);
    }

    public static void doPost(String url,Map<String, String> param) throws Exception {
        PrintUtil.dateLine("请求url： " + url);
        PrintUtil.dateLine("请求参数： " + JSONObject.toJSONString(param));
        FormBody.Builder formBuilder = new FormBody.Builder();
        Iterator<Map.Entry<String, String>> it = param.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry<String, String> entry = it.next();
            formBuilder.add(entry.getKey(), entry.getValue());
        }
        FormBody formBody = formBuilder.build();
        Request request = new Request.Builder()
                .url(url)
                .post(formBody)
                .build();
        Response response = new OkHttpClient().newCall(request).execute();
        if(response.isSuccessful()){
            String result = response.body().string();
            PrintUtil.dateLine("请求结果： " + result);
            if(result.contains("0000")){
                PrintUtil.dateLine("API调用成功！");
            }
        }else {
            PrintUtil.dateLine("API调用失败");
            PrintUtil.dateLine("Code: " + response.code());
        }
    }

    private static String urlEncode(String str) throws Exception {
        str = URLEncoder.encode(str,CHARSET_UTF8);
        String[] strs = str.split("%");
        if(strs.length > 0){
            StringBuilder sb = new StringBuilder();
            sb.append(strs[0]);
            for (int i = 1; i < strs.length; i++) {
                sb.append('%');
                sb.append(strs[i].substring(0,2).toLowerCase());
                sb.append(strs[i].substring(2));
            }
            str = sb.toString();
        }
        return str;
    }

    private static String notify(String content,String secretId,String encryptCode,String zipCode) throws Exception {
        byte[] data = Base64Util.base64decode(content);
        // 解压缩
        if("1".equals(zipCode)){
            data = EncryptUtil.deCompress(data);
        }
        // 解密
        if("1".equals(encryptCode)){
            String secretKey = "fe5b568cbb2f46d4820dfe1c488ef1b6";
            // 加密key为secretKey前24位
            String desKey = secretKey.substring(0,24);
            data = EncryptUtil.decrypt3DES(data,desKey,null);
        }
        return new String(data,"UTF-8");
    }

}
